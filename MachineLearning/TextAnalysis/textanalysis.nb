(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    108987,       2259]
NotebookOptionsPosition[    107605,       2207]
NotebookOutlinePosition[    107962,       2223]
CellTagsIndexPosition[    107919,       2220]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Directory", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7327529294645023`*^9, 3.7327529329207706`*^9}}],

Cell[BoxData["\<\"C:\\\\Users\\\\sxs\\\\Documents\\\\Matlab\"\>"], "Output",
 CellChangeTimes->{3.7327529341524353`*^9, 3.7327529804635563`*^9, 
  3.7327544561064005`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  "\"\<C:\\\\Users\\\\sxs\\\\Documents\\\\Matlab\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.73275295098654*^9, 3.73275297024026*^9}}],

Cell[BoxData["\<\"C:\\\\Users\\\\sxs\\\\Documents\\\\Matlab\"\>"], "Output",
 CellChangeTimes->{3.7327529730743985`*^9, 3.7327544579703064`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"options", "=", 
  RowBox[{"Import", "[", 
   RowBox[{"\"\<Pride and Prejudice.txt\>\"", ",", "\"\<Elements\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7327529134016457`*^9, 3.732752917290241*^9}, {
  3.732752983869153*^9, 3.7327530759833097`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Data\"\>", ",", "\<\"Lines\"\>", ",", "\<\"Plaintext\"\>", 
   ",", "\<\"String\"\>", ",", "\<\"Words\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.7327530544427986`*^9, 3.7327530795882115`*^9}, 
   3.732754460010873*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"wordString", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<Pride and Prejudice.txt\>\"", ",", "\"\<String\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wordList", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<Pride and Prejudice.txt\>\"", ",", "\"\<Words\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wordListMMA", " ", "=", " ", 
   RowBox[{"TextWords", "[", "wordString", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7327532834512*^9, 3.732753320621909*^9}, {
  3.732753373907522*^9, 3.732753399708087*^9}, {3.7327558607137737`*^9, 
  3.732755892522703*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"StringLength", "[", "wordString", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "wordList", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "wordListMMA", "]"}]}], "Input",
 CellChangeTimes->{{3.732753324092575*^9, 3.73275333490993*^9}, {
  3.7327534050413017`*^9, 3.7327534267290597`*^9}, {3.7327559037588263`*^9, 
  3.732755913866059*^9}}],

Cell[BoxData["717574"], "Output",
 CellChangeTimes->{
  3.7327533369891768`*^9, {3.732753417069727*^9, 3.732753429399196*^9}, 
   3.7327544656991625`*^9, 3.7327554775407*^9, 3.732755916572214*^9}],

Cell[BoxData["124588"], "Output",
 CellChangeTimes->{
  3.7327533369891768`*^9, {3.732753417069727*^9, 3.732753429399196*^9}, 
   3.7327544656991625`*^9, 3.7327554775407*^9, 3.7327559165878763`*^9}],

Cell[BoxData["124877"], "Output",
 CellChangeTimes->{
  3.7327533369891768`*^9, {3.732753417069727*^9, 3.732753429399196*^9}, 
   3.7327544656991625`*^9, 3.7327554775407*^9, 3.7327559165878763`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordCloud", "[", "wordListMMA", "]"}]], "Input",
 CellChangeTimes->{{3.7327536298466835`*^9, 3.7327536397190204`*^9}, {
  3.732755940158105*^9, 3.732755948834396*^9}}],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"The\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.2681992337164751],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"and\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.2226900734030148],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {22.5, -39.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"to\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.25283457561999145`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {20.5, 40.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"of\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.2268901010487664],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-29.5, 50.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"her\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.14687691615185314`],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-53.5, -33.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"was\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.12672741643362717`],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {-0.5, -70.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"that\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.1132766949858404],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {-70.5, 0.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"she\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.11949698909410542`],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {32.5, 66.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"You\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.10445132043907124`],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {73.5, 21.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Elizabeth\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.060324447705225395`],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {-10.5, 80.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"not\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.10567411329796095`],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-51.5, -59.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"had\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09116009371200924],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {68.5, 41.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"with\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08706639588007414],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {81.5, -1.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"his\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0961044300544763],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {-79.5, 23.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"in\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.13082111426556225`],
     FontColor->RGBColor[1, 0.75, 0]], {-68.5, 47.5}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"have\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07361567443228739],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {50.5, -70.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Darcy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0484686734646861],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {87.5, -18.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"he\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09977280863114542],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {83.5, -36.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"they\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06069660205358313],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {-44.5, -79.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"for\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08621575736954216],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {-59.5, 70.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"be\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09557278098539382],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {45.5, 83.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"But\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08206889463069884],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {-0.5, -94.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"your\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05330667999333666],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-2.5, 93.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"which\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05761303745290475],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {37.5, -88.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"though\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04060026724226539],
     FontColor->RGBColor[0.4567336004533182, 0.4884598397280091, 0.85]], {76.5, 59.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Bingley\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.042248379356421076`],
     FontColor->RGBColor[
      0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {-37.5, 94.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"very\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05452947285222637],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {-95.5, -16.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"What\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.054050988690052135`],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {86.5, -54.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"would\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05362566943478615],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {-0.5, 103.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"could\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05660290422164804],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {-35.5, -97.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Bennet\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.044215480912026255`],
     FontColor->RGBColor[
      0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {40.5, 99.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"were\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05867633559106971],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {-88.5, -51.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"their\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0521370520413552],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {77.5, 70.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"a\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.13507430681822208`],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-91.5, 46.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"as\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09190440240872472],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {-94.5, -33.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"My\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06681056634803166],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {-73.5, -76.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"him\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06920298715890282],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {87.5, -69.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"been\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05596492533874906],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {34.5, -102.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"When\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04852183837159434],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {-74.5, 86.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"from\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.055592770990391324`],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {76.5, 84.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"it\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.11099060398878574`],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {96.5, 39.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"might\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03921797966265094],
     FontColor->RGBColor[0.529922539669161, 0.44454647619850335`, 0.85]], {72.5, -84.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Mr.\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07015995548325128],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {-87.5, 69.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"them\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05171173278608922],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {-70.5, -91.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"herself\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04065343214917364],
     FontColor->RGBColor[
      0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {-40.5, 104.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"by\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06356750702662853],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {-96.5, -66.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"much\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04607625265381493],
     FontColor->RGBColor[
      0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {68.5, -99.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"such\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.049585136509759306`],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {-74.5, 98.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"there\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04745854023342938],
     FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {78.5, 97.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"every\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.039111649848834446`],
     FontColor->RGBColor[
      0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {-68.5, -101.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"This\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0549016272005841],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {-0.5, -110.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"before\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04075976196299013],
     FontColor->RGBColor[0.5788038738141875, 0.715, 0.049249615145579635`]], {-0.5, 114.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"should\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04187622500806334],
     FontColor->RGBColor[
      0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {-32.5, -110.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"must\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04549143867782421],
     FontColor->RGBColor[
      0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {34.5, 111.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"more\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04596992283999844],
     FontColor->RGBColor[
      0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {30.5, -113.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"any\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04485345979492523],
     FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {-107.5, -2.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"good\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038367341152118976`],
     FontColor->RGBColor[
      0.6453361616656581, 0.37647057236169945`, 0.6741595958358548]], {60.5, -112.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"on\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06718272069638939],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {-106.5, 9.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"never\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0402812778008159],
     FontColor->RGBColor[
      0.8510135028964549, 0.47400900193096995`, 0.018912152606809424`]], {-34.5, 114.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"said\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.049904125951208786`],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {64.5, 111.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Only\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04017494798699941],
     FontColor->RGBColor[
      0.6102054708420535, 0.39696347534213544`, 0.7619863228948663]], {107.5, 56.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"at\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07122325362141624],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {106.5, 12.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"know\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041291411032072615`],
     FontColor->RGBColor[
      0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {-101.5, -80.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"lady\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038314176245210725`],
     FontColor->RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {-107.5, 21.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"may\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03964329891791692],
     FontColor->RGBColor[0.4177882075393331, 0.715, 0.25417864494993975`]], {-55.5, -14.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"other\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.040493937428448895`],
     FontColor->RGBColor[
      0.9840111653093676, 0.677555826546838, 0.04316985366470745]], {-64.5, -112.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Mrs.\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04682056135053041],
     FontColor->RGBColor[
      0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {106.5, 67.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"is\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07558277598789258],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {-109.5, 35.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"will\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.050807929368649],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {-69.5, 110.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"so\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.059952293356867664`],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {110.5, -1.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"How\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041078751404439624`],
     FontColor->RGBColor[
      0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {101.5, -83.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Jane\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04278002842550356],
     FontColor->RGBColor[
      0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {106.5, 78.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"than\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04368383184294378],
     FontColor->RGBColor[
      0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {-105.5, 82.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"me\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05240287657589644],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {109.5, -33.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"some\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.039855958545549915`],
     FontColor->RGBColor[
      0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], {-101.5, -89.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Miss\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.043630666936035525`],
     FontColor->RGBColor[0.7277983389807635, 0.358, 0.5168487092603637]], {98.5, -95.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"who\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04384332656366852],
     FontColor->RGBColor[0.38354466123747527`, 0.5323732032575149, 0.85]], {106.5, 88.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"most\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03873949550047671],
     FontColor->RGBColor[
      0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {86.5, -108.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"think\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03980279363864167],
     FontColor->RGBColor[
      0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {90.5, 106.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"all\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06277003342300481],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {-110.5, 51.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"after\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03921797966265094],
     FontColor->RGBColor[
      0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {-94.5, -101.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"soon\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.040068618173182906`],
     FontColor->RGBColor[0.7989994773739094, 0.735166608597101, 0.]], {-105.5, 92.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"am\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04543827377091596],
     FontColor->RGBColor[
      0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {-91.5, 107.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"are\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04772436476797062],
     FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {-89.5, -110.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Do\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.047937024395603614`],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {-110.5, 64.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"no\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05516745173512534],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {109.5, -106.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"I\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.13831736613962523`],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-19.5, 0.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"little\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03863316568666022],
     FontColor->RGBColor[
      0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {117.5, -14.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"time\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03921797966265094],
     FontColor->RGBColor[
      0.9986489531525362, 0.7507447657626809, 0.0036478264881522893`]], {118.5, 25.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"now\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.039696463824825175`],
     FontColor->RGBColor[0.7042770479220728, 0.358, 0.5530353108891188]], {116.5, -22.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"well\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03996228835936642],
     FontColor->RGBColor[
      0.8774935098648088, 0.34000129802703827`, 0.2750108168919853]], {116.5, 35.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"can\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04033444270772415],
     FontColor->RGBColor[0.15725938678540247`, 0.715, 0.5857607804549424]], {-117.5, -26.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"has\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04044077252154065],
     FontColor->RGBColor[0.7658565873730018, 0.358, 0.4582975578876895]], {-7.5, -122.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"one\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.042886358239320056`],
     FontColor->RGBColor[
      0.845266573755366, 0.437100139366951, 0.03816643438841502]], {114.5, -44.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"own\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038314176245210725`],
     FontColor->RGBColor[
      0.9107287510704583, 0.33890687339431275`, 0.20182187767614543`]], {-29.5, -119.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"We\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04251420389096232],
     FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {-119.5, -14.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"an\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04761803495415413],
     FontColor->RGBColor[
      0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {-116.5, -36.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"or\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04862816818541084],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {-114.5, -46.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"did\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.043045852960044796`],
     FontColor->RGBColor[0.31827505306025683`, 0.715, 0.3808317506505822]], {10.5, 122.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"if\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0482560138370531],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {121.5, 8.5},
     Center, Automatic]},
  DefaultBaseStyle->{
   "Graphics", FontFamily -> "Helvetica", FontWeight -> Plain, FontTracking -> 
    "Plain", FontSlant -> Plain, FontVariations -> {}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{-130., 131.}, {-129., 128.}}]], "Output",
 CellChangeTimes->{
  3.7327536503439612`*^9, 3.7327554854209046`*^9, {3.7327559449999065`*^9, 
   3.732755957247163*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"wordString", "=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{"wordString", ",", 
     RowBox[{"PunctuationCharacter", "\[RuleDelayed]", "\"\< \>\""}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wordString", "=", 
   RowBox[{"StringDrop", "[", 
    RowBox[{"wordString", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7327541886754675`*^9, 3.7327543362414083`*^9}, {
  3.732755405338176*^9, 3.7327554404716654`*^9}, {3.732755634553756*^9, 
  3.7327556918610563`*^9}, {3.7327557274346247`*^9, 3.7327557688818865`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myWordList", "=", 
   RowBox[{"StringSplit", "[", "wordString", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myWordList", "=", 
   RowBox[{"DeleteStopwords", "[", "myWordList", "]"}]}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "myWordList", "]"}]], "Input",
 CellChangeTimes->{{3.7327557797757783`*^9, 3.7327557859425263`*^9}}],

Cell[BoxData["49805"], "Output",
 CellChangeTimes->{3.73275578748182*^9, 3.7327559806410427`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordCloud", "[", "myWordList", "]"}]], "Input",
 CellChangeTimes->{{3.7327559898826895`*^9, 3.7327559974575047`*^9}}],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"Elizabeth\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.1925557570432409],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Darcy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.1317043988708381],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {0., 37.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Mr\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.2348993288590604],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0., -49.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Bingley\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.10029724626572695`],
     FontColor->RGBColor[1, 0.75, 0]], {0., 65.}, Center, Automatic], InsetBox[
    StyleBox["\<\"Bennet\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.10506440335757417`],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-8., -85.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"said\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.12693724177899085`],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-72., -37.}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"Wickham\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06889009366061581],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {0., 86.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Jane\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09721261520629638],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {66., -43.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Mrs\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.11067282346562973`],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-79., 36.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Miss\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09384756314146304],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {81., 34.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"s\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.19984670318371314`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {56., -68.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"know\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08150903890374081],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {80., 55.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"sister\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07562019779028248],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {-79., 58.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"good\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07085304069843525],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {-61., -61.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Lydia\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06244041053635191],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {67., 80.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Collins\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06496419958497691],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {0., 103.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Longbourn\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03916546708792133],
     FontColor->RGBColor[
      0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {81., -27.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"lady\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06804883064440746],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {-68., 77.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Gutenberg\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.040567572114935224`],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {0., -103.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"thought\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.045895571217588006`],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {56., 97.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Catherine\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.049821465293226896`],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {0., -116.}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"soon\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07505935577947692],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {95., -61.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"family\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05711241143369913],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {-79., -82.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"think\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07365725075246303],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {-53., 104.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"great\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05430820137967134],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {61., -96.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"young\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05094314931483801],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {-53., -101.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"pleasure\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.040287151109532446`],
     FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {11., 117.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"make\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06215998953094913],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {94., -79.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"time\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0714138827092408],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {-107., -57.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"feelings\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038604625077115776`],
     FontColor->RGBColor[
      0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {-38., 120.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"mother\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05290609635265746],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {59., -112.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"replied\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.043371782168963],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {58., 110.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"say\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.059355779476921354`],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-48., -116.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"daughter\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03804378306631022],
     FontColor->RGBColor[
      0.845266573755366, 0.437100139366951, 0.03816643438841502]], {-98., 91.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"happiness\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.034678731001476885`],
     FontColor->RGBColor[
      0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {-99., -94.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"hope\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04869978127161578],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {-105., 75.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"little\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0674879886336019],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {110., 71.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Project\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03916546708792133],
     FontColor->RGBColor[
      0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {102., 90.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Long\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04701725523919911],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {99., -95.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"away\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.048138939260810226`],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {-91., -106.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"father\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0523452543418519],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {-98., 103.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"dear\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0587949374661158],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {101., 104.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"shall\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06047746349853246],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {-95., 118.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Gardiner\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04168925613654634],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {63., 122.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"evening\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.035239573012282435`],
     FontColor->RGBColor[0.15725938678540247`, 0.715, 0.5857607804549424]], {-93., -120.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"morning\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.036641678039296334`],
     FontColor->RGBColor[
      0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {106., -111.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"manner\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04196967714194911],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {0., -127.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"certainly\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.034678731001476885`],
     FontColor->RGBColor[
      0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], {5., 128.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"subject\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038324204071713],
     FontColor->RGBColor[0.7277983389807635, 0.358, 0.5168487092603637]], {118., -39.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"day\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0548690433904769],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {-121., -26.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Netherfield\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.034959152006879664`],
     FontColor->RGBColor[
      0.8774935098648088, 0.34000129802703827`, 0.2750108168919853]], {51., -128.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"room\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05655156942289357],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {97., -125.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"way\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04533472920678245],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {-119., 32.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"really\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03916546708792133],
     FontColor->RGBColor[
      0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {-117., -72.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"letter\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0472976762446019],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {107., 118.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Charlotte\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038324204071713],
     FontColor->RGBColor[
      0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {-40., 131.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"friend\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.045895571217588006`],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-82., 132.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"believe\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038885046082518554`],
     FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {-47., -132.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"indeed\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041128414125740774`],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {91., 132.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"house\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.044493466190574114`],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {-101., -130.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"happy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03776336206090744],
     FontColor->RGBColor[
      0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {-120., 130.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"quite\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04140883513114356],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {124., 18.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Lizzy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04168925613654634],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {124., 37.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"man\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05683199042829635],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {-124., 43.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"attention\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03355704697986577],
     FontColor->RGBColor[
      0.9107287510704583, 0.33890687339431275`, 0.20182187767614543`]], {5., 138.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"moment\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03411788899067132],
     FontColor->RGBColor[
      0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {5., -138.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"place\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.035800415023088],
     FontColor->RGBColor[
      0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {-122., -41.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"brother\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.036641678039296334`],
     FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {129., 48.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"heard\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038604625077115776`],
     FontColor->RGBColor[0.38354466123747527`, 0.5323732032575149, 0.85]], {-126., 54.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"better\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.040287151109532446`],
     FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {44., 134.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"came\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03972630909872689],
     FontColor->RGBColor[
      0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {129., -25.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"come\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.040847993120337996`],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {44., -137.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"wish\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04196967714194911],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {-130., 0.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"sisters\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.035800415023088],
     FontColor->RGBColor[
      0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {-36., 141.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"looked\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.035239573012282435`],
     FontColor->RGBColor[
      0.6102054708420535, 0.39696347534213544`, 0.7619863228948663]], {66., 143.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"sure\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04309136116356022],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {130., 0.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"saw\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.043371782168963],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {27., -25.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"cried\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04000673010412966],
     FontColor->RGBColor[
      0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {-131., 12.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ladies\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.035239573012282435`],
     FontColor->RGBColor[
      0.8510135028964549, 0.47400900193096995`, 0.018912152606809424`]], {132., -13.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Kitty\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03439830999607411],
     FontColor->RGBColor[
      0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {131., -52.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"added\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03439830999607411],
     FontColor->RGBColor[0.4177882075393331, 0.715, 0.25417864494993975`]], {-132., -12.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Lucas\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03411788899067132],
     FontColor->RGBColor[
      0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {-31., -143.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"just\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.034959152006879664`],
     FontColor->RGBColor[0.7989994773739094, 0.735166608597101, 0.]], {130., -64.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"found\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03383746798526855],
     FontColor->RGBColor[
      0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {133., -76.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"love\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.040287151109532446`],
     FontColor->RGBColor[
      0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {-135., 66.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"seen\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.035800415023088],
     FontColor->RGBColor[0.5788038738141875, 0.715, 0.049249615145579635`]], {-122., -82.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"uncle\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03383746798526855],
     FontColor->RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {-60., -143.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"aunt\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03804378306631022],
     FontColor->RGBColor[0.31827505306025683`, 0.715, 0.3808317506505822]], {129., -87.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Yes\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.035800415023088],
     FontColor->RGBColor[0.4567336004533182, 0.4884598397280091, 0.85]], {-134., 77.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"felt\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04253051915275467],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {-138., -56.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"hear\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.034678731001476885`],
     FontColor->RGBColor[0.7042770479220728, 0.358, 0.5530353108891188]], {74., -138.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Oh\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04140883513114356],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {139., 59.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"half\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03411788899067132],
     FontColor->RGBColor[
      0.9986489531525362, 0.7507447657626809, 0.0036478264881522893`]], {134., 81.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"told\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03383746798526855],
     FontColor->RGBColor[
      0.6453361616656581, 0.37647057236169945`, 0.6741595958358548]], {-64., 143.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"till\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.040567572114935224`],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {-140., 24.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"like\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03608083602849077],
     FontColor->RGBColor[
      0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {-131., 87.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Sir\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03636125703389355],
     FontColor->RGBColor[
      0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {-117., -105.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"tell\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03439830999607411],
     FontColor->RGBColor[0.529922539669161, 0.44454647619850335`, 0.85]], {125., -98.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"let\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03551999401768522],
     FontColor->RGBColor[0.7658565873730018, 0.358, 0.4582975578876895]], {-141., -69.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ill\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03551999401768522],
     FontColor->RGBColor[
      0.9840111653093676, 0.677555826546838, 0.04316985366470745]], {-9., -27.},
     Center, Automatic]},
  DefaultBaseStyle->{
   "Graphics", FontFamily -> "Helvetica", FontWeight -> Plain, FontTracking -> 
    "Plain", FontSlant -> Plain, FontVariations -> {}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{-149.5, 148.5}, {-148.5, 148.5}}]], "Output",
 CellChangeTimes->{
  3.732756003287775*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvQucVld5L7w6+73MjQFy1SQ1UaNVe1FP1eNBrcfT1sZ+n22+09NTU4xf
9dhJcvyiHzYnDV+Kwdo21lSFJBQJh9zUiNook5AhgAlMIHGEgSEETIbhMhCY
FyYMhBdCCCF5v3V7nvWstZ99ed+ZCaTt78d+mXfd9t7r+f+f21p7v5/87HVX
/+W1n73umv/x2Uv+4Muf/X+vvuZ//NUlH//Sl2VR9CtC/MrV8rjqEqH+rgkB
HzX5r3aN+lAl/N+f0f9dJKrbp4kfPSz0sXz7HNH7cKd4Vo1wdI5YDn9z32vd
sq2wfaeJrUdztSnoikjUhh8Sv/zzz4uN8ojgc16/rn2xa7Zo0mVt4pddD4md
f75QHMYh++V302/jn88WleFa0KcoNt6wUOy84fNi53pTd3je522dOpMbq9fM
xJX6vzfZq7V3IkvMzOSZjUGxda0QvZWgLujz7CY1w4OmTaVT/GjtHFGt1SJv
RszVmVm60N6tf5fuDiqiQu4S+5NxXLkdY/1COTsPiRehjnz3ZmNq+h3nrDO3
VgradwPGyol33uqVeXfn/23OUEZYxCYDh4wm7GaNGO3NFpmbFbLuR/bTwatp
LHdvbqOoK9s0wDciKcJuPll+MVFibmXu3N0tEXsy4HOLvQzA0mKH5siVPnqP
v5rjPlhixokNdSnE1kpjU7coJN7kBek3GbIaQetrAr9Pv6cjtZaY1+9JOpQO
j+OtmyQsFVSnuptuSNeb8uRJmJIxCcmK3mLa6POCmyczV5yaN3h7t/ysinsf
XinuPQJdwu97xezF4ff7xQf18QvxWC2pXz3jkPIjT4vP0HG972pMd94SKJfa
cfEvsuyP/9kcf7Ri1Ckepg6VzKF94kv//JT4l0O1lLKSV2auXY/ZpAeMxB+R
KqN8JkmB9Iqe6UtFBQUZfJcs2jj9m2KpPu4Rg8NwuhZR7brHlstj5lKxceY3
xcY+f4w/NjCeAVdNcNfK4Ostuuy36pbSY0/cLz6ztWrqnv2F+ODDT4vdDUg7
cZw0abu/jaDPRmEqIRJB5P+eS+BtgcDtGIv3ib1wmTsGUepG4m/IlHhl3jdF
T5e9jr6lUrK9Rp+y/QwiSF1DAr+kTkGpvymlaV1D46AFq0fOvkyKUEbmHImp
ywZFry/b3Fx2Q7bChaZKUXFW/433ZWms6Rk2jwnvu/q/i+ubzHDmvLb1CuV+
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
kWqMS+B1/TDAckzReuVuHV6VGY7kBfPFiRZo/MB8NrbjwOws7lvqPG8WWBDM
GYnU9BUUd31Tc97vuICZnLexqEsDmexlyodk9HQjWsQOHSDZ08BG60otfatz
J0INHg+n3IsLCZLhbzq2PpdF/+lC9TlMO7dh3knvzeOBamafBLs7h6Arbz7b
/ZBE4wta+VHN7e7LiWqiRBHB1olgdXGZBTikGqANzSfoU9rTKNTbxJfbQu4c
ZCSJzSU4ndvsHOwwCWaQbPJgRYwBsVkX5MgiV5cw8a8lwLMy7y0wqn4Cpkc/
o9htH8iXwMi7DpK2L5lePpc65nZRpO7r4axExsLqWPY5c9fXztwHNy/uvZIG
mPn87zYG/BLkXbNoYle3VASIrAOuQO/DSbwJTk/A3M7c4muBSPcDLAwiuWc+
Mp7R4LZs1AtNzuvMUn3cRmmuXV5VPx7QpPfRnjp/7vredeZB5DwUaXxhKWsP
LsfSSTlFxYmAg2YbM7VpD3OzoucCnYw9b2OBCDd/aZsjKMUsRNzWPAeRZqbs
dMEGH9qppsOGezSAi8u5VWsu5OHEwj11xj3tmbaMnQWvNmY8rl3epz052KTe
R8b1WdicruXptIcauWeS2dtR12c3jeFrE9S7ilJcKQ4OZdJuMNQ2ZN2RG4+j
CXd93sOZA/7DlBztGoGDezi5J36/3H2Q8U4zHAqMmN/InNdpB6dFcHOZ2kNo
nxkfdRmmUXws+wp8LJvbZU9vGR+btY95qxYYj1Ttq5xW8a9eak68xIg8hg4B
v313F7xhq8s9Ac8EmnTIDqYdt9EpvBX/JYVDuEjJ3coZCIoLmNvmdMT5zPWl
cUutRUDZWcw5WplznIsjME/sNCCqNzD65ddfHyLgIujzmPFSRSDbQflUZirQ
cyHXcjYjgtIYREBVLZSfxcyfFUsZJunoXPHq8oI9rnL8GhS1x2XRfpoSXCab
fEh2gdF0mybdtzWoqrkh9MiybvtV6gx5U0CnCw+cUj2HkWnafcB5VVJ7CtO3
g1wLmDaHm1kxUz5WPKhaVTeVmZffMHgooa5YZiS2307x9g+JVzct8yW6v8Zj
wlY/Phf3mO2/Kl6Noy0D1J3pmEDuk20xwC3qsrQm3kfBO6/ExSRye/DaCvfi
PfdM82TmNJydrg8WRa8deFjeNVnv77coPCIr0Kv82YvpiqKPC9uHG6OJKUt1
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
oNaPy/dU83W1RMrw+tNLaZ11qL6Culj21Iv4776D7g2PDjwOX/W4Ls4eW338
sW1jXqSRcMdu4d9NlzqpNi/ZrzY/L19UGpaZJNe4ekSXrfnqOG/KzUxuZac8
aT/3EoJalJ5EofFjalnPK/aI3xHNXgItiqAV5B2uYPE4PfmQXXYhpmZTHqP2
HPGMC0wJ6lrFKbJP/4nmhIPZ7PFNg+qRTRAYl2YkGbg7wnDjFbX63p9otvyE
GAMXlVFuZHLvkOqliz+n1n/XtIEyw7yS7bVQLf7ukFqt61YPBP3CMfLq7Pj2
mIgs9B+6J5I2CyLtbp7eegMZRtRL+mipLfsgXbG9qmDGvT0/Ucv+z/1Gy8CQ
XoFjarjZK7bHbsWnu2o8Bv0mBOoaqe05nWj4cln2ws2PLBKFsM+PqDVukUzJ
S10ms7Jmidk8gnLuQ/27RlybKmoaJ26qh+rEqy55coEhl0pt4daA0lkWxVAG
UPnV/HV0qI/JdrqyMIxY3TNkcXGlhKunsRJPpSxABRmPq/+xkVCu8oUSCIhU
/JJB9cwoL3ooRF75/Hra/tLaychsTdek8Ic3qzf+83I19Z/mN2HNtzZYz8kN
Nqh/42VOiby8VDdc6n6Xuq7Ob8WuNVdOXazyO/99+J8dGFN/ozpPDyjaNjDE
PDX1/U71Zp3X+s3nbrQ1U1s3R4+97on+5pEJZkbkjuo+9ECBgkJsZUWaAx+8
fdOoksWkgGcCQaOuzHn1fNwcH2iEn2oaPyDraDV3ZxFEKP+88K1ltflMqWe+
qo83sbolFXz8FvXGk9ern59loP18n1Jv7LnXijGJlCGS3hy6XvdV/NnXIzb4
BtTP90BZ9hg1KKMxblE/N2N6bXTvU53qNY0OA2zeiHfA38o31iBqKZkrkR6g
HsdkvBHS40CHan06qL7M8obBDtVMvfixRw47IxjeQ7qnZOc5pIeuQ0OUgj6+
PLt5YYAzsHt7YBp/jCs0/H11+FNfVCeNg8n/0/rLajvUbnX0U59UL9mPLv/B
1/Xfr1NWpl7/mTp5+ydLtkEVmnh3iYjq9kh19ui/3YiR86KUM9oW/cF0vdXu
DBbgGDQPqluD6rrwfBw1n2+Wkpd4ZaYEqAT9YEF61HlHSzgOKTm/8Rh2Ln4b
AW5KeTs2gc0ITE41TUSgQbS6AQ/tiZbyzwXP85jfkId8JohRr1Upf1P4ldLf
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
VJbB2ot2+omZD2EFciv8r37p/wFuBNGv\
\>"]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myWordCounts", "=", 
   RowBox[{"WordCounts", "[", 
    RowBox[{"StringJoin", "@", 
     RowBox[{"Riffle", "[", 
      RowBox[{"myWordList", ",", "\"\< \>\""}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wordCountsMMA", "=", 
   RowBox[{"WordCounts", "[", 
    RowBox[{"StringRiffle", "@", "myWordList"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wordCounts", "=", 
   RowBox[{"Counts", "[", "myWordList", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.732756028394216*^9, 3.732756079760223*^9}, {
  3.732756242458062*^9, 3.732756262708245*^9}, {3.732756347354707*^9, 
  3.7327563711090956`*^9}, {3.73275662966887*^9, 3.732756665376049*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "/@", 
  RowBox[{"{", 
   RowBox[{"myWordCounts", ",", "wordCounts", ",", "wordCountsMMA"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.7327566738923216`*^9, 3.7327567119705467`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6722", ",", "6722", ",", "6722"}], "}"}]], "Output",
 CellChangeTimes->{{3.7327566950712776`*^9, 3.7327567140716295`*^9}}]
}, Open  ]]
},
WindowSize->{808, 589},
WindowMargins->{{181, Automatic}, {32, Automatic}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (2016\:5e748\:670817\
\:65e5)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 127, 2, 30, "Input"],
Cell[710, 26, 171, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[918, 33, 180, 3, 30, "Input"],
Cell[1101, 38, 144, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1282, 44, 280, 6, 30, "Input"],
Cell[1565, 52, 267, 5, 30, "Output"]
}, Open  ]],
Cell[1847, 60, 664, 16, 69, "Input"],
Cell[CellGroupData[{
Cell[2536, 80, 382, 6, 69, "Input"],
Cell[2921, 88, 196, 3, 30, "Output"],
Cell[3120, 93, 198, 3, 30, "Output"],
Cell[3321, 98, 198, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3556, 106, 191, 3, 30, "Input"],
Cell[3750, 111, 23731, 565, 369, "Output"]
}, Open  ]],
Cell[27496, 679, 648, 15, 50, "Input"],
Cell[28147, 696, 258, 7, 50, "Input"],
Cell[CellGroupData[{
Cell[28430, 707, 138, 2, 30, "Input"],
Cell[28571, 711, 97, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28705, 717, 141, 2, 30, "Input"],
Cell[28849, 721, 77585, 1448, 374, 23588, 561, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[106449, 2172, 732, 18, 69, "Input"],
Cell[CellGroupData[{
Cell[107206, 2194, 218, 5, 30, "Input"],
Cell[107427, 2201, 162, 3, 62, "Output"]
}, Open  ]]
}
]
*)

